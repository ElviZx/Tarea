import tkinter as tk
from tkinter import messagebox

class ToDoApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Aplicación de Tareas")
        
        # Campo de entrada para nuevas tareas
        self.entry_task = tk.Entry(root, width=40)
        self.entry_task.grid(row=0, column=0, padx=10, pady=10)
        self.entry_task.bind("<Return>", self.add_task)  # Añadir tarea con Enter

        # Botón para añadir tarea
        self.btn_add = tk.Button(root, text="Añadir Tarea", command=self.add_task)
        self.btn_add.grid(row=0, column=1, padx=10, pady=10)

        # Lista para mostrar tareas
        self.task_list = tk.Listbox(root, width=50, height=15, selectmode=tk.SINGLE)
        self.task_list.grid(row=1, column=0, columnspan=2, padx=10, pady=10)

        # Botón para marcar tarea como completada
        self.btn_complete = tk.Button(root, text="Marcar como Completada", command=self.mark_as_completed)
        self.btn_complete.grid(row=2, column=0, padx=10, pady=10)

        # Botón para eliminar tarea
        self.btn_delete = tk.Button(root, text="Eliminar Tarea", command=self.delete_task)
        self.btn_delete.grid(row=2, column=1, padx=10, pady=10)

        # Eventos adicionales (doble clic para marcar como completada)
        self.task_list.bind("<Double-Button-1>", self.mark_as_completed)

    def add_task(self, event=None):
        task = self.entry_task.get()
        if task.strip() != "":
            self.task_list.insert(tk.END, task)
            self.entry_task.delete(0, tk.END)
        else:
            messagebox.showwarning("Entrada vacía", "Por favor, introduce una tarea.")

    def mark_as_completed(self, event=None):
        try:
            selected_index = self.task_list.curselection()[0]
            task = self.task_list.get(selected_index)
            self.task_list.delete(selected_index)
            self.task_list.insert(tk.END, f"[Completada] {task}")
        except IndexError:
            messagebox.showwarning("Seleccionar Tarea", "Por favor, selecciona una tarea para marcar como completada.")

    def delete_task(self):
        try:
            selected_index = self.task_list.curselection()[0]
            self.task_list.delete(selected_index)
        except IndexError:
            messagebox.showwarning("Seleccionar Tarea", "Por favor, selecciona una tarea para eliminar.")

if __name__ == "__main__":
    root = tk.Tk()
    app = ToDoApp(root)
    root.mainloop()
